{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /************************ TREE.CPP TEST *********************/\
\
#include <iostream>\
#include <streambuf>\
#include <algorithm>\
#include <cstdlib>\
#include <cassert>\
\
using namespace std;\
\
bool checkOrder(double a[], int n)\
\{\
	for (int i = 0; i < n - 1; i++)\
	\{\
		if (a[i] < a[i + 1])\
			return false;\
	\}\
	return true;\
\}\
\
int main()\
\{\
	double a[10] = \{ 3, 6, -5, 5, -2, 1, -7, -4, 8, 2 \};\
	double b[4] = \{ 6, -5, -2, -4 \};\
	double c[8] = \{ 10, 50, 40, 20, 50, 40, 30 \};\
	double d[12] = \{ 10, 20, 40, 10, 40, 30, 20, 10, 40, 50, 40, 30 \};\
	double e[12] = \{ 10, 10, 10, 20, 20, 30, 30, 40, 40, 40, 40, 50 \};\
	double f[16] = \{ 40, 70, 10, 120, 30, 40, 50, 110,\
        90, 20, 10, 60, 100, 110, 40, 80 \};\
	double g[16] = \{ 120, 110, 110, 100, 90, 80, 70, 60,\
        50, 40, 40, 40, 30, 20, 10, 10 \};\
           double test[4] = \{3, 5, 8, 9\};\
    double test2[3] = \{10, 20, 40\};\
    double test3[3] = \{10, 40, 30\};\
    double test4[3] = \{20, 10, 40\};\
    double test5[3] = \{50, 40, 30\};\
    double aa[12] = \{3, 5, 5, 8, 9, 8, 5, 3, 3, 1, 0, 6\};\
    double bb[7] = \{10, 50, 40, 20, 50, 40, 30\};\
    double tester[3] = \{2, -1, -3\};\
\
            assert(countIncludes(c, 7, d, 3) == 1);\
            assert(countIncludes(aa, 12, test, 4) == 2);\
            assert(countIncludes(bb, 7, test2, 3) == 1);\
            assert(countIncludes(bb, 7, test3, 3) == 2);\
            assert(countIncludes(bb, 7, test4, 3) == 0);\
            assert(countIncludes(bb, 7, test5, 3) == 3);\
            assert(countIncludes(c, 7, d+3, 3) == 2);\
            assert(countIncludes(c, 7, d+6, 3) == 0);\
            assert(countIncludes(c, 7, d+9, 3) == 3);\
            assert(countIncludes(c, 7, d+2, 1) == 2);\
            assert(countIncludes(c, 2, d+2, 1) == 0);\
            assert(countIncludes(c, 7, d, 0) == 1);\
            assert(countIncludes(c, 0, d, 0) == 1);\
\
            order(f, 16);\
            assert(equal(f, f+16, g));\
            double f2[16] = \{ 40, 70, 10, 120, 30, 40, 50, 110,\
        90, 20, 10, 60, 100, 110, 40, 80 \};\
            order(f2, 1);\
            double f3[16] = \{ 40, 70, 10, 120, 30, 40, 50, 110,\
        90, 20, 10, 60, 100, 110, 40, 80 \};\
            assert(f3[0] == 40);\
            double f4[16] = \{ 40, 70, 10, 120, 30, 40, 50, 110,\
        90, 20, 10, 60, 100, 110, 40, 80 \};\
            order(f4, 0);\
            assert(f4[0] == 40);\
\
	cout << "Passed all test cases." << endl;\
\
\}}